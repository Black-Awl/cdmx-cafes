---
import Layout from '../layouts/Layout.astro';
import Map from '../components/Map.astro';
import { getLangFromUrl, useTranslations } from '../i18n/ui';
import cafesData from '../data/cafes.json';
import { fetchCafes } from '../api/airtable';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let cafes = [];
try {
  cafes = await fetchCafes();
  if (cafes.length === 0) {
    console.warn('No cafes fetched from Airtable. Using local data.');
    cafes = cafesData;
  }
} catch (error) {
  console.error('Error fetching cafes from Airtable:', error);
  cafes = cafesData;
}
---

<Layout title={t('nav.home')}>
  <div class="flex">
    <div id="sidebar" class="w-1/4 pr-4 overflow-y-auto max-h-[600px]">
      <ul id="cafe-list">
        {cafes.map((cafe) => (
          <li class="mb-2 p-2 bg-base-200 rounded cursor-pointer hover:bg-base-300" data-id={cafe.id}>
            <h3 class="font-bold text-primary">{cafe.name}</h3>
            <p class="text-sm text-base-content">{cafe.address}</p>
            <button class="get-directions mt-2 btn btn-primary btn-sm">Get Walking Directions</button>
            <button class="open-google-maps mt-2 ml-2 btn btn-secondary btn-sm">Open in Google Maps</button>
          </li>
        ))}
      </ul>
    </div>
    <Map cafes={cafes} />
  </div>
  <a href="https://airtable.com/appSmf7rrgif6G7hf/pagwYKO3gSxcHtFe9/form" target="_blank" rel="noopener noreferrer" class="btn btn-primary mt-4">+ Add Cafe</a>
  <button id="clear-route" class="btn btn-secondary mt-4 ml-4">Clear Route</button>
</Layout>

<script>
  const cafesData = JSON.parse(document.getElementById('cafes-data').textContent);

  function addDirectionsButtonListener(button, cafe) {
    button.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      if ('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(position => {
          const { latitude, longitude } = position.coords;
          window.mapFunctions.fetchAndDisplayRoute([longitude, latitude], [cafe.longitude, cafe.latitude]);
        }, error => {
          console.error('Error getting user location:', error);
          alert('Unable to get your location. Please enable location services and try again.');
        });
      } else {
        alert('Geolocation is not supported by your browser.');
      }
    });
  }

  function addOpenGoogleMapsButtonListener(button, cafe) {
    button.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      if ('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(position => {
          const { latitude, longitude } = position.coords;
          const url = `https://www.google.com/maps/dir/?api=1&origin=${latitude},${longitude}&destination=${cafe.latitude},${cafe.longitude}&travelmode=walking`;
          window.open(url, '_blank');
        }, error => {
          console.error('Error getting user location:', error);
          alert('Unable to get your location. Please enable location services and try again.');
        });
      } else {
        alert('Geolocation is not supported by your browser.');
      }
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('#cafe-list li').forEach(item => {
      const cafeId = item.getAttribute('data-id');
      const cafe = cafesData.find(c => c.id === cafeId);
      if (cafe) {
        item.addEventListener('click', () => {
          window.mapFunctions.closeAllPopupsExcept(cafeId);
          window.mapFunctions.flyToStore(cafe);
          window.mapFunctions.showCafeInfo(cafe);
        });

        const directionsButton = item.querySelector('.get-directions');
        addDirectionsButtonListener(directionsButton, cafe);

        const openGoogleMapsButton = item.querySelector('.open-google-maps');
        addOpenGoogleMapsButtonListener(openGoogleMapsButton, cafe);
      }
    });

    document.getElementById('clear-route').addEventListener('click', () => {
      window.mapFunctions.clearRoute();
    });
  });
</script>

<script id="cafes-data" type="application/json" set:html={JSON.stringify(cafes)}></script>

---
import Layout from '../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../i18n/ui';
import cafesData from '../data/cafes.json';
import { fetchCafes } from '../api/airtable';
import maplibregl from 'maplibre-gl';
import 'maplibre-gl/dist/maplibre-gl.css';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let cafes = [];
try {
  cafes = await fetchCafes();
  if (cafes.length === 0) {
    console.warn('No cafes fetched from Airtable. Using local data.');
    cafes = cafesData;
  }
} catch (error) {
  console.error('Error fetching cafes from Airtable:', error);
  cafes = cafesData;
}
---

<Layout title={t('nav.home')}>
  <h1 class="text-4xl font-bold mb-4">{t('site.title')}</h1>
  <div class="flex">
    <div id="sidebar" class="w-1/4 pr-4 overflow-y-auto max-h-[600px]">
      <ul id="cafe-list">
        {cafes.map((cafe) => (
          <li class="mb-2 p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200" data-id={cafe.id}>
            <h3 class="font-bold">{cafe.name}</h3>
            <p class="text-sm">{cafe.address}</p>
          </li>
        ))}
      </ul>
    </div>
    <div id="map" class="w-3/4 h-[600px]"></div>
  </div>
  <a href="https://airtable.com/appSmf7rrgif6G7hf/pagwYKO3gSxcHtFe9/form" target="_blank" rel="noopener noreferrer" class="btn btn-primary mt-4">+ Add Cafe</a>
</Layout>

<script>
  import maplibregl from 'maplibre-gl';
  import 'maplibre-gl/dist/maplibre-gl.css';

  const cafesData = JSON.parse(document.getElementById('cafes-data').textContent);

  const map = new maplibregl.Map({
    container: 'map',
    style: `https://api.maptiler.com/maps/toner/style.json?key=${import.meta.env.PUBLIC_MAPTILER_API_KEY}`,
    center: [-99.133208, 19.432608], // Mexico City coordinates
    zoom: 12
  });

  const markers = {};

  function addMarker(cafe) {
    const marker = new maplibregl.Marker({ color: '#FFA500' })
      .setLngLat([cafe.longitude, cafe.latitude])
      .setPopup(new maplibregl.Popup().setHTML(`<h3>${cafe.name}</h3><p>${cafe.address}</p>`))
      .addTo(map);
    markers[cafe.id] = marker;
  }

  function fitMapToMarkers() {
    const bounds = new maplibregl.LngLatBounds();
    Object.values(markers).forEach(marker => bounds.extend(marker.getLngLat()));
    map.fitBounds(bounds, { padding: 50, maxZoom: 14 });
  }

  map.on('load', () => {
    cafesData.forEach(cafe => {
      if (cafe.latitude && cafe.longitude) {
        addMarker(cafe);
      }
    });

    fitMapToMarkers();

    // Add click event listeners to cafe list items
    document.querySelectorAll('#cafe-list li').forEach(item => {
      item.addEventListener('click', () => {
        const cafeId = item.getAttribute('data-id');
        const cafe = cafesData.find(c => c.id === cafeId);
        if (cafe) {
          map.flyTo({
            center: [cafe.longitude, cafe.latitude],
            zoom: 15
          });
          markers[cafeId].togglePopup();
        }
      });
    });
  });

  // Get user's location and show nearby cafes
  if ('geolocation' in navigator) {
    navigator.geolocation.getCurrentPosition(position => {
      const { latitude, longitude } = position.coords;
      
      // Add a custom marker for the user's location
      const el = document.createElement('div');
      el.className = 'maplibregl-user-location-dot';

      new maplibregl.Marker({
        element: el,
        anchor: 'center'
      })
        .setLngLat([longitude, latitude])
        .addTo(map);

      map.flyTo({
        center: [longitude, latitude],
        zoom: 13
      });
    }, error => {
      console.error('Error getting user location:', error);
    });
  }
</script>

<script id="cafes-data" type="application/json" set:html={JSON.stringify(cafes)}></script>
